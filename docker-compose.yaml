services:
  # -------------------------------------
  # PostgreSQL
  # -------------------------------------
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  # -------------------------------------
  # Postgres Migrations
  # -------------------------------------
  flyway-postgres:
    image: flyway/flyway
    container_name: postgres_migrations
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    command: -url=jdbc:postgresql://postgres:5432/postgres -user=postgres -locations=filesystem:/flyway/postgres migrate
    volumes:
      - ./migrations/postgres:/flyway/postgres
    environment:
      FLYWAY_CONNECT_RETRIES: 10

  backend:
    image: gilcu2/space_backend:latest
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      PG_URL: "postgresql://postgres:5432/postgres?user=postgres&password=postgres"
      DISCOWEB_TOKEN: ${DISCOWEB_TOKEN}
    healthcheck:
      test: [ "CMD-SHELL", "bash -c '</dev/tcp/localhost/8000'" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: [ "uvicorn", "src.api:app", "--host", "0.0.0.0", "--port", "8000" ]

  frontend:
    image: gilcu2/space_frontend:latest
    depends_on:
      - backend
    ports:
      - "3000:80"
    environment:
      - API_HOST=backend
    command: /entrypoint.sh

volumes:
  postgres_data:

